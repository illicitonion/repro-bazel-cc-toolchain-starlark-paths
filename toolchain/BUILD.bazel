load("@bazel_toolchains//configs/ubuntu16_04_clang/11.0.0/bazel_4.0.0/cc:cc_toolchain_config.bzl", "cc_toolchain_config")

cc_toolchain(
    name = "cc_toolchain",
    all_files = ":no_files",
    ar_files = ":no_files",
    as_files = ":no_files",
    compiler_files = ":no_files",
    coverage_files = ":no_files",
    dwp_files = ":no_files",
    linker_files = ":no_files",
    objcopy_files = ":no_files",
    strip_files = ":no_files",
    supports_param_files = True,
    toolchain_config = ":cc_toolchain_config",
    toolchain_identifier = "cc_toolchain",
    visibility = ["//visibility:public"],
)

cc_toolchain_config(
    name = "cc_toolchain_config",
    abi_libc_version = "glibc_2.27",
    abi_version = "clang",
    compile_flags = [],
    compiler = "clang",
    coverage_compile_flags = [],
    coverage_link_flags = [],
    cpu = "k8",
    cxx_builtin_include_directories = [],
    cxx_flags = [],
    dbg_compile_flags = [],
    host_system_name = "x86_64-unknown-linux-gnu",
    link_flags = [],
    link_libs = [],
    opt_compile_flags = [],
    opt_link_flags = [],
    supports_start_end_lib = True,
    target_libc = "glibc_2.27",
    target_system_name = "x86_64-unknown-linux-gnu",
    tool_paths = {
        "ar": "bin/llvm-ar",
        "cpp": "bin/clang++",
        "dwp": "bin/llvm-dwp",
        "gcc": "bin/clang",
        "ld": "bin/clang++",
        "llvm-cov": "bin/llvm-cov",
        "nm": "bin/llvm-nm",
        "objcopy": "bin/llvm-objcopy",
        "objdump": "bin/llvm-objdump",
        "strip": "bin/llvm-strip",
        "gcov": "/dev/null",
    },
    toolchain_identifier = "cc_toolchain",
    unfiltered_compile_flags = [],
)

filegroup(
    name = "no_files",
    srcs = [],
)
